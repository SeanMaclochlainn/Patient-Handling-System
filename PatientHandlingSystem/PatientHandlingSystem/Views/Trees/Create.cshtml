@model PatientHandlingSystem.ViewModels.TreeCreatorViewModel

@{
    ViewBag.Title = "Create";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<h2>Create</h2>

<div id="treeDiv" class="treeEditor" style="width:900px;height:600px;">

</div>

@using (Ajax.BeginForm("UpdateTree", "Trees", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "treeDiv" }))
{
    <div class="container">
        <div class="row" id="selectionDiv" style="font-weight:bold;">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.RadioButtonFor(i => i.SolutionInput, true, new { @class = "solutionTab" }) Solution
                @Html.RadioButtonFor(i => i.SolutionInput, false, new { @class = "attributeTab" }) Attribute
            </div>
            <div class="col-md-6"></div>
        </div>
        <br />
        <div class="row" id="attribute">
            <div class="col-md-2"></div>
            @Html.HiddenFor(i => i.Tree.ID)
            <div class="col-md-3">
                @Html.DropDownListFor(i => Model.SelectedAttribute.ID, new SelectList(Model.Attributes, "ID", "Name"), htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-1"></div>
            <button class="btn btn-default col-md-2" id="button">Insert Node</button>
            <div class="col-md-1"></div>
            <button class="btn btn-danger col-md-2" name="undoButton" id="undo" value="undo">Undo</button>
            <div class="col-md-2"></div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-2"></div>
            <div class="col-md-1">
                @Html.EditorFor(i => Model.SelectedAttributeValue.Name, new { htmlAttributes = new { @class = "numericInput form-control" } })
            </div>
            <div class="col-md-9"></div>
        </div>
        @Html.HiddenFor(i => i.Tree.ID)
        <div id="solution">
            <div class="form-group">
                @Html.TextAreaFor(i => i.Solution, new { @rows = "20", @placeholder = "Enter solution", @class = "form-control", style = "min-width:600px" })
            </div>
            <div class="form-group">
                <input type="submit" value="Insert Solution" class="btn btn-default">
            </div>
        </div>
    </div>
    
}
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.Tree.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Tree.ID)
            @Html.EditorFor(model => model.Tree.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tree.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}
    <script>
        $(document).ready(function () {
            $("#solution").hide();
            $("#selectionDiv").click(function () {
                if ($(".attributeTab").is(":checked")) {
                    $("#attribute").show();
                    $("#solution").hide();
                    //console.log("attribute");
                }
                if ($(".solutionTab").is(":checked")) {
                    $("#solution").show();
                    $("#attribute").hide();
                    $(".numericInput").hide();
                    //console.log("solution");
                }
            });
            var numericIds = [];
            @foreach (var a in Model.Attributes)
            {
                if(a.Numeric)
                {
                    @:numericIds.push(@a.ID);
                            }
            }

            $(".numericInput").hide();
            $("#SelectedAttribute_ID").change(function () {
                for (var i = 0; i < numericIds.length; i++) {
                    if (numericIds[i] == $(this).val()) {
                        console.log("numeric");
                        $(".numericInput").show();
                        $(this).after("<input id='SelectedAttribute_Numeric' name='SelectedAttribute.Numeric' type='hidden' value='true' />");
                    }
                    else {
                        $(".numericInput").hide();
                        $("#SelectedAttribute_Numeric").remove();
                    }
                }
            });
        });
    </script>
